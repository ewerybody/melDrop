// from: C:\Program Files\Autodesk\Maya2013\scripts\others\OutlinerEdMenu.mel

global proc selectHierarchy() {
	string $sel[] = `ls -sl`;
	select -hi;
	select -d `ls -s -sl`;
	select -d $sel;
}

// "outlinerPanel1"
global proc OutlinerEdMenu (string $outlineEd)
{
	global string $gOutlinerPopupMenu;

	// These are visible to clients, do not change their names
	string $menuName = $outlineEd + "Popup";
	$gOutlinerPopupMenu = $menuName;

	if (`popupMenu -ex $menuName`)
		deleteUI $menuName;
	
	popupMenu
		-ctrlModifier false
		-button 3
		-markingMenu 1
		-postMenuCommand ("OutlinerEdMenuCommand " + $outlineEd)
		-parent $outlineEd $menuName;

	menuItem -label "Select Hierarchy"
		-command "selectHierarchy"
		-rp "E"
		OutlinerEdMenuSelectHierarchyItem;
		
	menuItem -label "Group"
		-command "python(\"import mayaWrangler;mayaWrangler.scene.group()\")"
		-rp "NE"
		OutlinerEdMenuGroupItem;
		
	menuItem -label "Ungroup"
		-command "python(\"import mayaWrangler;mayaWrangler.scene.ungroup()\")"
		-rp "SW"
		OutlinerEdMenuUngroupItem;

	menuItem -label "Sort" -subMenu true;
		menuItem -label "Sort Selection"
			-command "python(\"import mayaWrangler;mayaWrangler.scene.sort()\")"
			OutlinerEdMenuSortItem;
		menuItem -label "Sort front" -command "reorder -front;";
		menuItem -label "Sort back" -command "reorder -back;";
	setParent -m ..;
		
	menuItem -label (uiRes("m_OutlinerEdMenu.kShowDAGObjectsOnly")) 
		-checkBox true
		-rp "S"
		-command ("outlinerEditor -edit -showDagOnly #1 " + $outlineEd)
		dagItem;
	menuItem -label (uiRes("m_OutlinerEdMenu.kShowShapes")) 
		-checkBox false
		-rp "W"
		-command ("outlinerEditor -edit -showShapes #1 " + $outlineEd)
		shapeItem;
	menuItem -label (uiRes("m_OutlinerEdMenu.kShowReferenceNodes")) 
		-checkBox false
		-command ("outlinerEditor -edit -showReferenceNodes #1 " + $outlineEd)
		referenceNodeItem;
	menuItem -label (uiRes("m_OutlinerEdMenu.kShowReferenceMembers")) 
		-checkBox false
		-command ("outlinerEditor -edit -showReferenceMembers #1 " + $outlineEd)
		referenceMemberItem;
	menuItem -label (uiRes("m_OutlinerEdMenu.kShowAttributes")) 
		-checkBox false
		-command ("outlinerEditor -edit -showAttributes #1 " + $outlineEd)
		attributeItem;
	menuItem -label (uiRes("m_OutlinerEdMenu.kShowSetMembers")) 
		-checkBox false
		-command ("outlinerEditor -edit -showSetMembers #1 " + $outlineEd)
		setMembersItem;
	menuItem -label (uiRes("m_OutlinerEdMenu.kShowConnected")) 
		-checkBox false
		-command ("outlinerEditor -edit -showConnected #1 " + $outlineEd)
		connectedItem;
	menuItem -label (uiRes("m_OutlinerEdMenu.kShowNamespaces")) 
		-checkBox true
		-command ("outlinerEditor -edit -showNamespace #1 " + $outlineEd)
		showNamespaceItem;
	menuItem -label (uiRes("m_OutlinerEdMenu.kShowMuteInformation")) 
		-checkBox true
		-command ("outlinerEditor -edit -showMuteInfo #1 " + $outlineEd)
		showMuteItem;
    menuItem -label (uiRes("m_OutlinerEdMenu.kOrganizeByLayer")) 
		-checkBox true
		-command ("outlinerEditor -edit -organizeByLayer #1 " + $outlineEd)
		organizeLayerItem;		
    menuItem -label (uiRes("m_OutlinerEdMenu.kAutoExpandLayers")) 
		-checkBox true
		-command ("outlinerEditor -edit -autoExpandLayers #1 " + $outlineEd)
		autoExpandLayersItem;				
	menuItem -divider true;
	menuItem -label (uiRes("m_OutlinerEdMenu.kRevealSelected"))  
		-command ("outlinerEditor -edit -showSelected  1 " + $outlineEd)
		showSelectedItem;

	int $outlinerLongName = 1;
	if (!`outlinerEditor -query -niceNames $outlineEd`) {
		$outlinerLongName = (`outlinerEditor -query -longNames $outlineEd` ? 2 : 0);
	}
	menuItem -label (uiRes("m_OutlinerEdMenu.kChannelNames")) -subMenu true;
		radioMenuItemCollection;
		menuItem -label (uiRes("m_OutlinerEdMenu.kNice"))
			-radioButton ( 1 == $outlinerLongName )
			-command ("setOutlinerLongName 1 " + $outlineEd)
			niceNameItem;
		menuItem -label (uiRes("m_OutlinerEdMenu.kLong"))
			-radioButton ( 2 == $outlinerLongName )
			-command ("setOutlinerLongName 2 " + $outlineEd)
			longNameItem;
		menuItem -label (uiRes("m_OutlinerEdMenu.kShort"))
			-radioButton ( 0 == $outlinerLongName )
			-command ("setOutlinerLongName 0 " + $outlineEd)
			shortNameItem;
		setParent -m ..;

	string $sortOrder = `outlinerEditor -query -sortOrder $outlineEd`;
	menuItem -label (uiRes("m_OutlinerEdMenu.kSortOrder"))-subMenu true;
		radioMenuItemCollection;
		menuItem -label (uiRes("m_OutlinerEdMenu.kSceneHierarchy"))
			-radioButton ($sortOrder == "none")
			-command ("outlinerEditor -edit -sortOrder none " + $outlineEd)
			noneSortOrderItem;
		menuItem -label (uiRes("m_OutlinerEdMenu.kAlphabeticalWithinType"))
			-radioButton ($sortOrder == "dagName")
			-command ("outlinerEditor -edit -sortOrder dagName " + $outlineEd)
			dagNameSortOrderItem;
		setParent -m ..;

	menuItem -divider true;

	string $attrAlphaOrder = `outlinerEditor -query -attrAlphaOrder $outlineEd`;
	menuItem -label (uiRes("m_OutlinerEdMenu.kAttrAlphaOrder"))-subMenu true;
		radioMenuItemCollection;
		menuItem -label (uiRes("m_OutlinerEdMenu.kAttrAlphaDefault"))
			-radioButton ($attrAlphaOrder == "default")
			-command ("outlinerEditor -edit -attrAlphaOrder \"default\" " + $outlineEd)
			defaultAttrAlphaSortOrderItem;
		menuItem -label (uiRes("m_OutlinerEdMenu.kAttrAlphabeticalAscend"))
			-radioButton ($attrAlphaOrder == "ascend")
			-command ("outlinerEditor -edit -attrAlphaOrder ascend " + $outlineEd)
			ascendAttrAlphaSortOrderItem;
		menuItem -label (uiRes("m_OutlinerEdMenu.kAttrAlphabeticalDescend"))
			-radioButton ($attrAlphaOrder == "descend")
			-command ("outlinerEditor -edit -attrAlphaOrder descend " + $outlineEd)
			descendAttrAlphaSortOrderItem;
		setParent -m ..;

	menuItem -divider true;
	string $referenceMenu = `menuItem -label (uiRes("m_OutlinerEdMenu.kReference")) -aob true -subMenu true`;
	menuItem -edit -postMenuCommand ("buildReferenceMenu "+$referenceMenu) $referenceMenu;
	setParent -m ..;
	
	
	string $containerMenu = `menuItem -label (uiRes("m_OutlinerEdMenu.kAsset")) -subMenu true`;
	menuItem -edit -postMenuCommand ("buildContainerMenu "+$containerMenu) $containerMenu;
	setParent -m ..;
	menuItem -divider true;
	
	menuItem -label (uiRes("m_OutlinerEdMenu.kSelectSetMembers"))
		-command ("selectAllSetMembers " + $outlineEd)
		selectAllSetMembersItem;

    menuItem -divider true;
    string $animLayerFilterOptions = `outlinerEditor -query -animLayerFilterOptions $outlineEd`;    
    int $showAnimLayerWeight = `outlinerEditor -query -showAnimLayerWeight $outlineEd`;    
	menuItem -label (uiRes("m_OutlinerEdMenu.kAnimLayerFilterOptions"))-subMenu true;
		radioMenuItemCollection;
		menuItem -label (uiRes("m_OutlinerEdMenu.kAnimLayerFilterFromLayerEditor"))
			-radioButton ($animLayerFilterOptions == "animLayerEditor")
			-command ("outlinerEditor -edit -animLayerFilterOptions \"animLayerEditor\" " + $outlineEd)
			animLayerFilterAnimLayerEditorItem;
		menuItem -label (uiRes("m_OutlinerEdMenu.kAnimLayerFilterAllAffecting"))
			-radioButton ($animLayerFilterOptions == "allAffecting")
			-command ("outlinerEditor -edit -animLayerFilterOptions allAffecting " + $outlineEd)
			animLayerFilterAllAffectingItem;
		menuItem -label (uiRes("m_OutlinerEdMenu.kAnimLayerFilterActive"))
			-radioButton ($animLayerFilterOptions == "active")
			-command ("outlinerEditor -edit -animLayerFilterOptions active " + $outlineEd)
			animLayerFilterAllActiveItem;
        menuItem -label (uiRes("m_OutlinerEdMenu.kAnimLayerFilterSelected"))
			-radioButton ($animLayerFilterOptions == "selected")
			-command ("outlinerEditor -edit -animLayerFilterOptions selected " + $outlineEd)
			animLayerFilterSelectedItem;								
        
        menuItem -label (uiRes("m_OutlinerEdMenu.kAnimLayerFilterActiveAndSelected"))
			-radioButton ($animLayerFilterOptions == "activeAndSelected")
			-command ("outlinerEditor -edit -animLayerFilterOptions activeAndSelected " + $outlineEd)
			animLayerFilterActiveAndSelectedItem;											
		
		menuItem -divider true;
		menuItem -label (uiRes("m_OutlinerEdMenu.kShowAnimLayerWeight")) 
		    -checkBox ($showAnimLayerWeight == 1)
		    -command ("outlinerEditor -edit -showAnimLayerWeight #1 " + $outlineEd)
		    showAnimLayerWeightItem;		
		
		setParent -m ..;
		
	menuItem -divider true;

	//
        //  Invoke any user supplied code. This callback is published and
        //  needs to remain consistent in future versions of Maya.
        //
        if (exists ("outlinerEdMenuUserCallback") )
        {
                // Use catchQuiet in case no callback is supplied, we don't want that to
                // show an error
                catchQuiet( eval("source \"outlinerEdMenuUserCallback\"") );

        }
}